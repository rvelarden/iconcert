{"ast":null,"code":"var _jsxFileName = \"/home/xrojo/dev/flatiron/labs/phase4project/iconcert/iconcert-frontend/src/components/MainContainer.js\";\nimport React, { Component } from \"react\";\nimport ConcertList from \"./ConcertList\";\nimport SearchConcert from \"./SearchConcert\";\nimport Form from \"./Form\";\nimport Navbar from './Navbar';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nclass MainContainer extends Component {\n  constructor(...args) {\n    super(...args);\n    this.state = {\n      artists: [],\n      searchText: '',\n      showForm: false\n    };\n\n    this.addNewConcert = newConcert => {\n      // console.log(newTrans)\n      this.setState({\n        artists: [...this.state.artists, newConcert]\n      });\n    };\n\n    this.searchBar = textT => {\n      // console.log(textT)\n      this.setState({\n        searchText: textT\n      });\n    };\n\n    this.showForm = () => {\n      this.setState({\n        showForm: !this.state.showForm\n      });\n    };\n\n    this.deleteConcert = artist => {\n      // console.log(artist)\n      fetch('http://localhost:3000/artists/' + artist.id, {\n        method: 'DELETE'\n      }).then(r => r.json()).then(() => {\n        this.setState({\n          artists: this.state.artists.filter(deletedArtist => deletedArtist.id !== artist.id)\n        });\n      });\n    };\n  }\n\n  componentDidMount() {\n    fetch('http://localhost:3000/artists').then(r => r.json()).then(artistsData => this.setState({\n      artists: artistsData\n    })); // .then(console.log)\n  }\n\n  render() {\n    const filteredConcerts = this.state.artists.filter(filterConcert => filterConcert.name.toLowerCase().includes(this.state.searchText));\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(SearchConcert, {\n        searchBar: this.searchBar,\n        searchText: this.state.searchText\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Navbar, {\n        showForm: this.showForm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, this), this.state.showForm ? /*#__PURE__*/_jsxDEV(Form, {\n        addNewConcert: this.addNewConcert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 34\n      }, this) : null, /*#__PURE__*/_jsxDEV(ConcertList, {\n        artists: filteredConcerts,\n        deleteConcert: this.deleteConcert\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 9\n    }, this);\n  }\n\n}\n\nexport default MainContainer;","map":{"version":3,"sources":["/home/xrojo/dev/flatiron/labs/phase4project/iconcert/iconcert-frontend/src/components/MainContainer.js"],"names":["React","Component","ConcertList","SearchConcert","Form","Navbar","MainContainer","state","artists","searchText","showForm","addNewConcert","newConcert","setState","searchBar","textT","deleteConcert","artist","fetch","id","method","then","r","json","filter","deletedArtist","componentDidMount","artistsData","render","filteredConcerts","filterConcert","name","toLowerCase","includes"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AACA,OAAOC,aAAP,MAA0B,iBAA1B;AACA,OAAOC,IAAP,MAAiB,QAAjB;AACA,OAAOC,MAAP,MAAmB,UAAnB;;;AAEA,MAAMC,aAAN,SAA4BL,SAA5B,CAAsC;AAAA;AAAA;AAAA,SAElCM,KAFkC,GAE1B;AACNC,MAAAA,OAAO,EAAE,EADH;AAENC,MAAAA,UAAU,EAAE,EAFN;AAGNC,MAAAA,QAAQ,EAAE;AAHJ,KAF0B;;AAAA,SAiBlCC,aAjBkC,GAiBjBC,UAAD,IAAe;AAC7B;AACA,WAAKC,QAAL,CAAc;AACZL,QAAAA,OAAO,EAAE,CAAC,GAAG,KAAKD,KAAL,CAAWC,OAAf,EAAwBI,UAAxB;AADG,OAAd;AAGD,KAtBiC;;AAAA,SAwBlCE,SAxBkC,GAwBrBC,KAAD,IAAS;AACnB;AACA,WAAKF,QAAL,CAAc;AACZJ,QAAAA,UAAU,EAAEM;AADA,OAAd;AAGD,KA7BiC;;AAAA,SA+BlCL,QA/BkC,GA+BvB,MAAK;AACd,WAAKG,QAAL,CAAc;AAACH,QAAAA,QAAQ,EAAE,CAAC,KAAKH,KAAL,CAAWG;AAAvB,OAAd;AACD,KAjCiC;;AAAA,SAmClCM,aAnCkC,GAmCjBC,MAAD,IAAW;AACzB;AACAC,MAAAA,KAAK,CAAC,mCAAiCD,MAAM,CAACE,EAAzC,EAA6C;AAACC,QAAAA,MAAM,EAAE;AAAT,OAA7C,CAAL,CACCC,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEM,MAAI;AACR,aAAKR,QAAL,CAAc;AACZL,UAAAA,OAAO,EAAE,KAAKD,KAAL,CAAWC,OAAX,CAAmBgB,MAAnB,CAA0BC,aAAa,IAAIA,aAAa,CAACN,EAAd,KAAqBF,MAAM,CAACE,EAAvE;AADG,SAAd;AAGD,OAND;AAOD,KA5CiC;AAAA;;AAQlCO,EAAAA,iBAAiB,GAAE;AACjBR,IAAAA,KAAK,CAAC,+BAAD,CAAL,CACCG,IADD,CACMC,CAAC,IAAIA,CAAC,CAACC,IAAF,EADX,EAECF,IAFD,CAEMM,WAAW,IAAI,KAAKd,QAAL,CAAc;AACjCL,MAAAA,OAAO,EAAEmB;AADwB,KAAd,CAFrB,EADiB,CAMjB;AACD;;AA+BDC,EAAAA,MAAM,GAAG;AACT,UAAMC,gBAAgB,GAAG,KAAKtB,KAAL,CAAWC,OAAX,CAAmBgB,MAAnB,CAA0BM,aAAa,IAAIA,aAAa,CAACC,IAAd,CAAmBC,WAAnB,GAAiCC,QAAjC,CAA0C,KAAK1B,KAAL,CAAWE,UAArD,CAA3C,CAAzB;AACE,wBACE;AAAA,8BAEE,QAAC,aAAD;AAAe,QAAA,SAAS,EAAE,KAAKK,SAA/B;AAA0C,QAAA,UAAU,EAAE,KAAKP,KAAL,CAAWE;AAAjE;AAAA;AAAA;AAAA;AAAA,cAFF,eAGE,QAAC,MAAD;AAAQ,QAAA,QAAQ,EAAE,KAAKC;AAAvB;AAAA;AAAA;AAAA;AAAA,cAHF,EAIG,KAAKH,KAAL,CAAWG,QAAX,gBAAsB,QAAC,IAAD;AAAO,QAAA,aAAa,EAAE,KAAKC;AAA3B;AAAA;AAAA;AAAA;AAAA,cAAtB,GAAoE,IAJvE,eAKE,QAAC,WAAD;AAAa,QAAA,OAAO,EAAEkB,gBAAtB;AACC,QAAA,aAAa,EAAE,KAAKb;AADrB;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF;AAUD;;AA1DiC;;AA6DpC,eAAeV,aAAf","sourcesContent":["import React, { Component } from \"react\";\nimport ConcertList from \"./ConcertList\";\nimport SearchConcert from \"./SearchConcert\";\nimport Form from \"./Form\";\nimport Navbar from './Navbar'\n\nclass MainContainer extends Component {\n\n    state = {\n      artists: [],\n      searchText: '',\n      showForm: false\n    }\n  \n    componentDidMount(){\n      fetch('http://localhost:3000/artists')\n      .then(r => r.json())\n      .then(artistsData => this.setState({\n        artists: artistsData\n      }))\n      // .then(console.log)\n    }\n  \n    addNewConcert = (newConcert) =>{\n      // console.log(newTrans)\n      this.setState({\n        artists: [...this.state.artists, newConcert]\n      })\n    }\n  \n    searchBar = (textT)=>{\n      // console.log(textT)\n      this.setState({\n        searchText: textT\n      })\n    }\n    \n    showForm = () =>{\n      this.setState({showForm: !this.state.showForm})\n    }\n\n    deleteConcert = (artist) =>{\n      // console.log(artist)\n      fetch('http://localhost:3000/artists/'+artist.id, {method: 'DELETE'})\n      .then(r => r.json())\n      .then(()=>{\n        this.setState({\n          artists: this.state.artists.filter(deletedArtist => deletedArtist.id !== artist.id)\n        })\n      })\n    }\n  \n    render() {\n    const filteredConcerts = this.state.artists.filter(filterConcert => filterConcert.name.toLowerCase().includes(this.state.searchText))\n      return (\n        <div>\n          \n          <SearchConcert searchBar={this.searchBar} searchText={this.state.searchText}/>\n          <Navbar showForm={this.showForm}/>\n          {this.state.showForm ? <Form  addNewConcert={this.addNewConcert}/> : null}\n          <ConcertList artists={filteredConcerts} \n           deleteConcert={this.deleteConcert}/>\n        </div>\n      )\n    }\n  }\n  \n  export default MainContainer"]},"metadata":{},"sourceType":"module"}